openapi: 3.0.3
info:
  title: IITM Project Management System API
  description: |
    API documentation for IITM Project Management System

    Auth Token to hit System Administrator APIs is: 'Sys-Admin-Secret'
    
    Set up environment variables in a .env file:
    ```bash
    GEMINI_API_KEY=<your-gemimin-api-key>
    ```

    Major Features:

    Instructor Features:
    - Project Creation and Management:
      * Create and manage software projects
      * Define project problem and objectives
      * Set up multiple milestones with deadlines
      * Track student progress
    
    - Progress Monitoring:
      * View student commit histories
      * Track milestone completion status
      * Review project progress
    
    - AI-Powered Analysis:
      * Automated project report analysis
    
    - Centralized Dashboard:
      * Comprehensive project overview
      * Real-time status tracking
      * Milestone progress monitoring

    Student Features:
    - Project View:
      * Access assigned projects
      * View milestone deadlines
      * Track project requirements
    
    - Progress Updates:
      * Update milestone status
      * Submit progress reports
      * Track completion

    Professor Features:
    - Project Review:
      * Review project descriptions

    System Administrator Features:
    - Security Management:
      * User account administration
      
  version: 1.0.0
  contact:
    name: IITM Support Team

servers:
  - url: http://127.0.0.1:5000/
    description: Local development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: instructor@iitm.ac.in
        password:
          type: string
          format: password
          example: pass123

    InstructorSignupRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: newinstructor@iitm.ac.in
        password:
          type: string
          format: password
          example: pass123

    StudentSignupRequest:
      type: object
      required:
        - email
        - password
        - github_username
      properties:
        email:
          type: string
          format: email
          example: student@iitm.ac.in
        password:
          type: string
          format: password
          example: pass123
        github_username:
          type: string
          example: student123

    LoginResponse:
      type: object
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: Error message here
    StudentListResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            example: 1
          email:
            type: string
            example: student@iitm.ac.in
    CourseListResponse: 
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Software Engineering
    CreateProjectRequest:
      type: object
      required:
        - title
        - problem
        - milestones
        - student_ids
      properties:
        title:
          type: string
          example: Project Management System
        problem:
          type: string
          example: Build a project tracking system
        milestones:
          type: array
          items:
            type: object
            required:
              - title
              - description 
              - deadline
            properties:
              title:
                type: string
                example: Requirements Analysis
              description:
                type: string
                example: Gather and document requirements
              deadline:
                type: string
                format: date
                example: "2024-04-30"
        student_ids:
          type: array
          items:
            type: integer
          example: [1]
        new_course:
          type: boolean
          example: true
        course_name:
          type: string
          example: Software Engineering
        course_id:
          type: integer
          example: 1
    StudentDashboardResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            example: 1
          title:
            type: string
            example: Project Management System
          problem:
            type: string
            example: Build a tracking system
          course:
            type: string
            example: Software Engineering
          github_repo_url:
            type: string
            example: https://github.com/org/repo
    ProjectInfoResponse:
      type: object
      properties:
        title:
          type: string
          example: Project Management System
        problem:
          type: string
          example: Build a tracking system
        course:
          type: string
          example: Software Engineering
        milestones:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              title:
                type: string
                example: Requirements Phase
              description:
                type: string
                example: Gather requirements
              deadline:
                type: string
                format: date
                example: "2024-04-30"
              status:
                type: string
                enum: [Pending, Completed]
                example: Pending
        github_repo_url:
          type: string
          example: https://github.com/org/repo
        project_report:
          type: string
          example: Project progress report content
    UpdateProjectInfoRequest:
      type: object
      required:
        - milestones
      properties:
        milestones:
          type: array
          items:
            type: object
            required:
              - id
              - status
            properties:
              id:
                type: integer
                example: 1
              status:
                type: string
                enum: [Pending, Completed]
                example: Completed
        project_report:
          type: string
          example: Updated project report content
    ProjectDetailsResponse:
      type: object
      properties:
        title:
          type: string
          example: Project Management System
        problem:
          type: string
          example: Build a tracking system
        course:
          type: string
          example: Software Engineering
        milestones:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              title:
                type: string
                example: Requirements Phase
              description:
                type: string
                example: Gather requirements
              deadline:
                type: string
                format: date
                example: "2024-04-30"
        students:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              email:
                type: string
                example: student@iitm.ac.in
        students_add:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 2
              email:
                type: string
                example: newstudent@iitm.ac.in
              github_username:
                type: string
                example: student123

    StudentProgressResponse:
      type: object
      properties:
        title:
          type: string
          example: Project Management System
        problem:
          type: string
          example: Build a tracking system
        milestones:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              text:
                type: string
                example: Requirements Phase
              description:
                type: string
                example: Gather requirements
              deadline:
                type: string
                format: date
                example: "2024-04-30"
              status:
                type: string
                enum: [Pending, Completed]
                example: Completed
              completion_date:
                type: string
                format: date-time
                example: "2024-03-15 14:30:00"
        github_repo_url:
          type: string
          example: https://github.com/org/repo
        project_report:
          type: string
          example: Project progress report content
        report_created_at:
          type: string
          format: date-time
          example: "2024-03-15 14:30:00"
    AIEvaluationResponse:
      type: object
      properties:
        evaluation:
          type: string
          example: "Technical depth: The project demonstrates strong understanding... \nImplementation: Complete and well-structured..."
        created_at:
          type: string
          format: date-time
          example: "2024-03-15 14:30:00"

    ProfessorProjectResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: Project Management System
        problem:
          type: string
          example: Build a project tracking system
        course:
          type: string
          example: Software Engineering
        instructor:
          type: object
          properties:
            id:
              type: integer
              example: 1
            email:
              type: string
              example: instructor@iitm.ac.in
        milestones:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
                example: Requirements Phase
              description:
                type: string
                example: Gather requirements
              deadline:
                type: string
                format: date-time
                example: "2024-03-15T14:30:00Z"

    AdminStudentResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          format: email
          example: student@iitm.ac.in
        github_username:
          type: string
          example: student123

    AdminInstructorResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          format: email
          example: instructor@iitm.ac.in

    CreateStudentRequest:
      type: object
      required:
        - email
        - github_username
        - password
      properties:
        email:
          type: string
          format: email
          example: newstudent@iitm.ac.in
        github_username:
          type: string
          example: student123
        password:
          type: string
          format: password
          example: pass123

    CreateInstructorRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: newinstructor@iitm.ac.in
        password:
          type: string
          format: password
          example: pass123

paths:
  /api/instructor_login:
    post:
      tags:
        - Authentication
      summary: Instructor Login
      description: Authenticate instructor and receive JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/student_login:
    post:
      tags:
        - Authentication
      summary: Student Login
      description: Authenticate student and receive JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid request
        '401':
          description: Invalid credentials

  /api/instructor_signup:
    post:
      tags:
        - Authentication
      summary: Instructor Signup
      description: Register new instructor account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstructorSignupRequest'
      responses:
        '200':
          description: Successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid request
        '409':
          description: Email already exists

  /api/student_signup:
    post:
      tags:
        - Authentication  
      summary: Student Signup
      description: Register new student account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentSignupRequest'
      responses:
        '200':
          description: Successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid request
        '409':
          description: Email already exists

  /api/instructor_dashboard:
    get:
      tags:
        - Instructor
      summary: Get Instructor Dashboard
      description: Get list of all projects created by instructor with basic details
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of instructor's projects
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    title:
                      type: string
                      example: Project Management System
                    problem:
                      type: string
                      example: Build a project management system for IITM
                    course:
                      type: string
                      example: Software Engineering
                    student_count:
                      type: integer
                      example: 5
                    milestone_count:
                      type: integer
                      example: 3
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Not an instructor

  /api/students:
    get:
      tags:
        - Project Management
      summary: Get Students List
      description: Get list of all students for project assignment
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of students
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentListResponse'
        '401':
          description: Unauthorized - Invalid or missing token
          
  /api/courses:
    get:
      tags:
        - Project Management  
      summary: Get Courses List
      description: Get list of all courses for project creation
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of courses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseListResponse'
        '401':
          description: Unauthorized - Invalid or missing token

  /api/create_project:
    post:
      tags:
        - Project Management
      summary: Create New Project
      description: Create a new project with milestones and assign students
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
      responses:
        '201':
          description: Project created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Project created successfully
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Not an instructor

  /api/edit_project/{project_id}:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: integer
        description: ID of project to edit
    get:
      tags:
        - Project Management
      summary: Get Project Details
      description: Get detailed project information for editing
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Project details
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    type: object
                    properties:
                      id:
                        type: integer
                      title:
                        type: string
                      problem:
                        type: string
                      course_id:
                        type: integer
                      milestones:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            title:
                              type: string
                            description:
                              type: string
                            deadline:
                              type: string
                              format: date
                      assigned_students:
                        type: array
                        items:
                          type: integer
                  unassigned_students:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        email:
                          type: string
                        github_username:
                          type: string
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Not an instructor
        '404':
          description: Project not found
          
    put:
      tags:
        - Project Management
      summary: Update Project
      description: Update project details, milestones and student assignments
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
      responses:
        '200':
          description: Project updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Project updated successfully
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized - Invalid or missing token  
        '403':
          description: Forbidden - Not an instructor
        '404':
          description: Project not found
  /api/delete_project/{project_id}:
    delete:
      tags:
        - Project Management
      summary: Delete Project
      description: Delete a project and all its associated data (milestones, student assignments)
      security:
        - BearerAuth: []
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of project to delete
      responses:
        '200':
          description: Project deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Project deleted successfully
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Not an instructor
        '404':
          description: Project not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Error deleting project
                  error:
                    type: string
                    example: Error details
  /api/student_dashboard:
    get:
      tags:
        - Student
      summary: Get Student Dashboard
      description: Get list of all projects assigned to the student
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of student's projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDashboardResponse'
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Not a student

  /api/project_info/{project_id}:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: integer
        description: ID of the project
    get:
      tags:
        - Student
      summary: Get Project Information
      description: Get detailed project information including milestones for a student
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Project details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectInfoResponse'
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Not a student
        '404':
          description: Project not found
    
    post:
      tags:
        - Student
      summary: Update Project Information
      description: Update milestone statuses and project report
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectInfoRequest'
      responses:
        '200':
          description: Project info updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Project info updated successfully
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Not a student
        '404':
          description: Project not found
        '500':
          description: Internal server error
  /api/project_details/{project_id}:
    get:
      tags:
        - Instructor
      summary: Get Project Details
      description: Get detailed project information including milestones and students
      security:
        - BearerAuth: []
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the project
      responses:
        '200':
          description: Project details including students and milestones
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetailsResponse'
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Not an instructor
        '404':
          description: Project not found

  /api/track_progress/{project_id}/{student_id}:
    get:
      tags:
        - Instructor
      summary: Track Student Progress
      description: Get detailed information about a student's progress on a project
      security:
        - BearerAuth: []
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the project
        - name: student_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the student
      responses:
        '200':
          description: Student's project progress details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentProgressResponse'
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Not an instructor
        '404':
          description: Project or student assignment not found

  /api/ai_eval/{student_project_id}:
    parameters:
      - name: student_project_id
        in: path
        required: true
        schema:
          type: integer
        description: ID of the student project to evaluate
    
    post:
      tags:
        - AI Evaluation
      summary: Generate AI Evaluation
      description: Generate an AI evaluation of student's project report using Gemini
      security:
        - BearerAuth: []
      responses:
        '200':
          description: AI evaluation generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIEvaluationResponse'
        '400':
          description: No project report found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No project report found
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Not an instructor
        '404':
          description: Student project not found
        '500':
          description: Internal server error
    
    get:
      tags:
        - AI Evaluation
      summary: Get AI Evaluation
      description: Retrieve existing AI evaluation for a student project
      security:
        - BearerAuth: []
      responses:
        '200':
          description: AI evaluation retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIEvaluationResponse'
        '401':
          description: Unauthorized - Invalid or missing token
        '404':
          description: No evaluation found for this project
  /api/prof/projects/{project_id}:
    get:
      tags:
        - Professor
      summary: Get Project Review Details
      description: Get detailed project information for professor review
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the project to review
      responses:
        '200':
          description: Project details for professor review
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessorProjectResponse'
        '404':
          description: Project not found

# Add to paths section:
  /api/admin/students:
    get:
      tags:
        - System Administrator
      summary: Get All Students
      description: Get list of all registered students
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of all students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminStudentResponse'
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Not an admin

    post:
      tags:
        - System Administrator
      summary: Create Student
      description: Create a new student account
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudentRequest'
      responses:
        '201':
          description: Student created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminStudentResponse'
        '400':
          description: Missing required fields
        '409':
          description: Email already exists

  /api/admin/students/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        description: Student ID
    
    get:
      tags:
        - System Administrator
      summary: Get Student
      description: Get student details by ID
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Student details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminStudentResponse'
        '404':
          description: Student not found

    put:
      tags:
        - System Administrator
      summary: Update Student
      description: Update student details
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                github_username:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Student updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminStudentResponse'
        '404':
          description: Student not found

    delete:
      tags:
        - System Administrator
      summary: Delete Student
      description: Delete a student account
      security:
        - BearerAuth: []
      responses:
        '204':
          description: Student deleted successfully
        '404':
          description: Student not found

  /api/admin/instructors:
    get:
      tags:
        - System Administrator
      summary: Get All Instructors
      description: Get list of all registered instructors
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of all instructors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminInstructorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

    post:
      tags:
        - System Administrator
      summary: Create Instructor
      description: Create a new instructor account
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstructorRequest'
      responses:
        '201':
          description: Instructor created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminInstructorResponse'
        '400':
          description: Missing required fields
        '409':
          description: Email already exists

  /api/admin/instructors/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        description: Instructor ID
    
    get:
      tags:
        - System Administrator
      summary: Get Instructor
      description: Get instructor details by ID
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Instructor details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminInstructorResponse'
        '404':
          description: Instructor not found

    put:
      tags:
        - System Administrator
      summary: Update Instructor
      description: Update instructor details
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Instructor updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminInstructorResponse'
        '404':
          description: Instructor not found

    delete:
      tags:
        - System Administrator
      summary: Delete Instructor
      description: Delete an instructor account
      security:
        - BearerAuth: []
      responses:
        '204':
          description: Instructor deleted successfully
        '404':
          description: Instructor not found
  /api/get-commit-data:
    get:
      tags:
        - Commit Progress
      summary: Get Commit History
      description: Get daily commit counts for a student project
      security:
        - BearerAuth: []
      parameters:
        - name: student_project_id
          in: query
          required: true
          schema:
            type: integer
          description: ID of the student project
      responses:
        '200':
          description: Daily commit data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                      example: "2024-03-15"
                    commits:
                      type: integer
                      example: 5
        '400':
          description: Missing student project ID
        '500':
          description: Internal server error

  /api/fetch-commits:
    post:
      tags:
        - Commit Progress
      summary: Fetch GitHub Commits
      description: Fetch and store commit data from GitHub repository
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - owner
                - repo
                - student_project_id
              properties:
                owner:
                  type: string
                  example: "octocat"
                repo:
                  type: string
                  example: "Hello-World"
                student_project_id:
                  type: integer
                  example: 1
      responses:
        '200':
          description: Commits fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Commits fetched and stored successfully"
        '409':
          description: No commits found
        '500':
          description: Internal server error

  /api/project_stats:
    get:
      tags:
        - Analytics
      summary: Get Project Statistics
      description: Get statistical overview of all projects
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Project statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  project_stats:
                    type: array
                    items:
                      type: object
                      properties:
                        project_id:
                          type: integer
                          example: 1
                        project_title:
                          type: string
                          example: "Project Management System"
                        total_students:
                          type: integer
                          example: 10
                        total_milestones:
                          type: integer
                          example: 5
                        students_completed_all_milestones:
                          type: integer
                          example: 3
                        students_submitted_reports:
                          type: integer
                          example: 8
                        total_commits:
                          type: integer
                          example: 150

  /api/student_stats:
    get:
      tags:
        - Analytics
      summary: Get Student Statistics
      description: Get statistical overview of student progress
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Student statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  completed_students_per_project:
                    type: array
                    items:
                      type: object
                      properties:
                        project_id:
                          type: integer
                          example: 1
                        project_title:
                          type: string
                          example: "Project Management System"
                        students_completed_all_milestones:
                          type: integer
                          example: 5
                  students_not_started_milestones:
                    type: array
                    items:
                      type: object
                      properties:
                        project_id:
                          type: integer
                          example: 1
                        students_not_started:
                          type: integer
                          example: 2
                  incomplete_reports:
                    type: array
                    items:
                      type: object
                      properties:
                        project_id:
                          type: integer
                          example: 1
                        num_incomplete_reports:
                          type: integer
                          example: 3